// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <header
                    class="App-header"
                  >
                    <img
                      alt="logo"
                      class="App-logo"
                      src="logo.svg"
                    />
                    <p>
                      Edit 
                      <code>
                        src/App.js
                      </code>
                       and save to reload.
                    </p>
                    <a
                      class="App-link"
                      href="https://reactjs.org"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn React
                    </a>
                  </header>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <header
                    class="App-header"
                  >
                    <img
                      alt="logo"
                      class="App-logo"
                      src="logo.svg"
                    />
                    <p>
                      Edit 
                      <code>
                        src/App.js
                      </code>
                       and save to reload.
                    </p>
                    <a
                      class="App-link"
                      href="https://reactjs.org"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn React
                    </a>
                  </header>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
            "lineNumber": 8,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
              "lineNumber": 9,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                "lineNumber": 10,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "img",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                  "lineNumber": 11,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": "Edit ",
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": "Edit ",
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                      "lineNumber": 12,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "code",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "src/App.js",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "src/App.js",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": " and save to reload.",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": " and save to reload.",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode":  and save to reload.,
                      "tag": 6,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "stateNode": <code>
                      src/App.js
                    </code>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "code",
                    "updateQueue": null,
                  },
                  "stateNode": Edit ,
                  "tag": 6,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    "Edit ",
                    <code>
                      src/App.js
                    </code>,
                    " and save to reload.",
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    "Edit ",
                    <code>
                      src/App.js
                    </code>,
                    " and save to reload.",
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                    "lineNumber": 14,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "a",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Learn React",
                    "className": "App-link",
                    "href": "https://reactjs.org",
                    "rel": "noopener noreferrer",
                    "target": "_blank",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Learn React",
                    "className": "App-link",
                    "href": "https://reactjs.org",
                    "rel": "noopener noreferrer",
                    "target": "_blank",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <a
                    class="App-link"
                    href="https://reactjs.org"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn React
                  </a>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "a",
                  "updateQueue": null,
                },
                "stateNode": <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "stateNode": <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "img",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "header",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />,
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>,
                <a
                  className="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>,
              ],
              "className": "App-header",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />,
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>,
                <a
                  className="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <header
              class="App-header"
            >
              <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>
              <a
                class="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>
            </header>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "header",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <header
              className="App-header"
            >
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
              />
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>
              <a
                className="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>
            </header>,
            "className": "App",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <header
              className="App-header"
            >
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
              />
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>
              <a
                className="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>
            </header>,
            "className": "App",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="App"
          >
            <header
              class="App-header"
            >
              <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>
              <a
                class="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>
            </header>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <header
                    class="App-header"
                  >
                    <img
                      alt="logo"
                      class="App-logo"
                      src="logo.svg"
                    />
                    <p>
                      Edit 
                      <code>
                        src/App.js
                      </code>
                       and save to reload.
                    </p>
                    <a
                      class="App-link"
                      href="https://reactjs.org"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn React
                    </a>
                  </header>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="App"
                >
                  <header
                    class="App-header"
                  >
                    <img
                      alt="logo"
                      class="App-logo"
                      src="logo.svg"
                    />
                    <p>
                      Edit 
                      <code>
                        src/App.js
                      </code>
                       and save to reload.
                    </p>
                    <a
                      class="App-link"
                      href="https://reactjs.org"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn React
                    </a>
                  </header>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
      >
        <header
          class="App-header"
        >
          <img
            alt="logo"
            class="App-logo"
            src="logo.svg"
          />
          <p>
            Edit 
            <code>
              src/App.js
            </code>
             and save to reload.
          </p>
          <a
            class="App-link"
            href="https://reactjs.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn React
          </a>
        </header>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <header
          className="App-header"
        >
          <img
            alt="logo"
            className="App-logo"
            src="logo.svg"
          />
          <p>
            Edit 
            <code>
              src/App.js
            </code>
             and save to reload.
          </p>
          <a
            className="App-link"
            href="https://reactjs.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn React
          </a>
        </header>,
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <header
            class="App-header"
          >
            <img
              alt="logo"
              class="App-logo"
              src="logo.svg"
            />
            <p>
              Edit 
              <code>
                src/App.js
              </code>
               and save to reload.
            </p>
            <a
              class="App-link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>
          </header>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
              />,
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>,
              <a
                className="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "img",
            },
            Object {
              "instance": <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Edit ",
                  <code>
                    src/App.js
                  </code>,
                  " and save to reload.",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Edit ",
                Object {
                  "instance": <code>
                    src/App.js
                  </code>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "src/App.js",
                  },
                  "ref": null,
                  "rendered": Array [
                    "src/App.js",
                  ],
                  "type": "code",
                },
                " and save to reload.",
              ],
              "type": "p",
            },
            Object {
              "instance": <a
                class="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Learn React",
                "className": "App-link",
                "href": "https://reactjs.org",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": Array [
                "Learn React",
              ],
              "type": "a",
            },
          ],
          "type": "header",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <header
                        class="App-header"
                      >
                        <img
                          alt="logo"
                          class="App-logo"
                          src="logo.svg"
                        />
                        <p>
                          Edit 
                          <code>
                            src/App.js
                          </code>
                           and save to reload.
                        </p>
                        <a
                          class="App-link"
                          href="https://reactjs.org"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Learn React
                        </a>
                      </header>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <header
                        class="App-header"
                      >
                        <img
                          alt="logo"
                          class="App-logo"
                          src="logo.svg"
                        />
                        <p>
                          Edit 
                          <code>
                            src/App.js
                          </code>
                           and save to reload.
                        </p>
                        <a
                          class="App-link"
                          href="https://reactjs.org"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Learn React
                        </a>
                      </header>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
              "lineNumber": 8,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                "lineNumber": 9,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                  "lineNumber": 10,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "img",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                    "lineNumber": 11,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": "Edit ",
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": "Edit ",
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                        "lineNumber": 12,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "code",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "src/App.js",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "src/App.js",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": " and save to reload.",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": " and save to reload.",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode":  and save to reload.,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "stateNode": <code>
                        src/App.js
                      </code>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "code",
                      "updateQueue": null,
                    },
                    "stateNode": Edit ,
                    "tag": 6,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      "Edit ",
                      <code>
                        src/App.js
                      </code>,
                      " and save to reload.",
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      "Edit ",
                      <code>
                        src/App.js
                      </code>,
                      " and save to reload.",
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/user/src/theinterned/photo-league/src/App.js",
                      "lineNumber": 14,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "a",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Learn React",
                      "className": "App-link",
                      "href": "https://reactjs.org",
                      "rel": "noopener noreferrer",
                      "target": "_blank",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Learn React",
                      "className": "App-link",
                      "href": "https://reactjs.org",
                      "rel": "noopener noreferrer",
                      "target": "_blank",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <a
                      class="App-link"
                      href="https://reactjs.org"
                      rel="noopener noreferrer"
                      target="_blank"
                    >
                      Learn React
                    </a>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "a",
                    "updateQueue": null,
                  },
                  "stateNode": <p>
                    Edit 
                    <code>
                      src/App.js
                    </code>
                     and save to reload.
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "stateNode": <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "img",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "header",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
                  />,
                  <p>
                    Edit 
                    <code>
                      src/App.js
                    </code>
                     and save to reload.
                  </p>,
                  <a
                    className="App-link"
                    href="https://reactjs.org"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn React
                  </a>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
                  />,
                  <p>
                    Edit 
                    <code>
                      src/App.js
                    </code>
                     and save to reload.
                  </p>,
                  <a
                    className="App-link"
                    href="https://reactjs.org"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    Learn React
                  </a>,
                ],
                "className": "App-header",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <header
                class="App-header"
              >
                <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>
                <a
                  class="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>
              </header>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "header",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <header
                className="App-header"
              >
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>
                <a
                  className="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>
              </header>,
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <header
                className="App-header"
              >
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>
                <a
                  className="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>
              </header>,
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
            >
              <header
                class="App-header"
              >
                <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>
                <a
                  class="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>
              </header>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <header
                        class="App-header"
                      >
                        <img
                          alt="logo"
                          class="App-logo"
                          src="logo.svg"
                        />
                        <p>
                          Edit 
                          <code>
                            src/App.js
                          </code>
                           and save to reload.
                        </p>
                        <a
                          class="App-link"
                          href="https://reactjs.org"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Learn React
                        </a>
                      </header>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="App"
                    >
                      <header
                        class="App-header"
                      >
                        <img
                          alt="logo"
                          class="App-logo"
                          src="logo.svg"
                        />
                        <p>
                          Edit 
                          <code>
                            src/App.js
                          </code>
                           and save to reload.
                        </p>
                        <a
                          class="App-link"
                          href="https://reactjs.org"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          Learn React
                        </a>
                      </header>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="App"
                  >
                    <header
                      class="App-header"
                    >
                      <img
                        alt="logo"
                        class="App-logo"
                        src="logo.svg"
                      />
                      <p>
                        Edit 
                        <code>
                          src/App.js
                        </code>
                         and save to reload.
                      </p>
                      <a
                        class="App-link"
                        href="https://reactjs.org"
                        rel="noopener noreferrer"
                        target="_blank"
                      >
                        Learn React
                      </a>
                    </header>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
        >
          <header
            class="App-header"
          >
            <img
              alt="logo"
              class="App-logo"
              src="logo.svg"
            />
            <p>
              Edit 
              <code>
                src/App.js
              </code>
               and save to reload.
            </p>
            <a
              class="App-link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>
          </header>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <header
            className="App-header"
          >
            <img
              alt="logo"
              className="App-logo"
              src="logo.svg"
            />
            <p>
              Edit 
              <code>
                src/App.js
              </code>
               and save to reload.
            </p>
            <a
              className="App-link"
              href="https://reactjs.org"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn React
            </a>
          </header>,
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <header
              class="App-header"
            >
              <img
                alt="logo"
                class="App-logo"
                src="logo.svg"
              />
              <p>
                Edit 
                <code>
                  src/App.js
                </code>
                 and save to reload.
              </p>
              <a
                class="App-link"
                href="https://reactjs.org"
                rel="noopener noreferrer"
                target="_blank"
              >
                Learn React
              </a>
            </header>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
                />,
                <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>,
                <a
                  className="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  alt="logo"
                  class="App-logo"
                  src="logo.svg"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <p>
                  Edit 
                  <code>
                    src/App.js
                  </code>
                   and save to reload.
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Edit ",
                    <code>
                      src/App.js
                    </code>,
                    " and save to reload.",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Edit ",
                  Object {
                    "instance": <code>
                      src/App.js
                    </code>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "src/App.js",
                    },
                    "ref": null,
                    "rendered": Array [
                      "src/App.js",
                    ],
                    "type": "code",
                  },
                  " and save to reload.",
                ],
                "type": "p",
              },
              Object {
                "instance": <a
                  class="App-link"
                  href="https://reactjs.org"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn React
                </a>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Learn React",
                  "className": "App-link",
                  "href": "https://reactjs.org",
                  "rel": "noopener noreferrer",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": Array [
                  "Learn React",
                ],
                "type": "a",
              },
            ],
            "type": "header",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
